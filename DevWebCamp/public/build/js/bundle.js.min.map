{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","json","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","hora","dataset","horaId","seleccionarHora","obtenerHorasDisponibles","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponenteprevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHtml","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminartag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector(\"#horas\");\r\n\r\n    if(horas){\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n        categoria.addEventListener(\"change\", terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id : +categoria.value ?? \"\",\r\n            dia : +inputHiddenDia.value ?? \"\"\r\n        }\r\n\r\n        if(!Object.values(busqueda).includes(\"\")){\r\n\r\n            (async () => {\r\n                await buscarEventos(); \r\n                const id = inputHiddenHora.value;\r\n\r\n                //Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n                horaSeleccionada.classList.remove(\"horas__hora--deshabilitada\"); \r\n                horaSeleccionada.classList.add(\"horas__hora--seleccionada\");\r\n                \r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n\r\n        }\r\n\r\n        function terminoBusqueda(e){\r\n            busqueda[e.target.name] = e.target.value; \r\n\r\n            //Reiniciar los campos ocultos y las horas\r\n            inputHiddenHora.value = \"\";\r\n            inputHiddenDia.value = \"\";\r\n\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n\r\n            if(Object.values(busqueda).includes(\"\")){\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            resultado = await fetch(url);\r\n            eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach( li => li.classList.add(\"horas__hora--deshabilitada\"));\r\n\r\n            //Obtener eventos disponibles y habilitar horas disponibles\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( hora => !horasTomadas.includes(hora.dataset.horaId));\r\n            resultado.forEach( hora => hora.classList.remove(\"horas__hora--deshabilitada\"));\r\n\r\n            const horasDisponibles = document.querySelectorAll(\"#horas li:not(.horas__hora--deshabilitada)\");\r\n            horasDisponibles.forEach(hora => hora.addEventListener(\"click\", seleccionarHora));\r\n\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Deshabilita la hora previa si hay otro click\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\")\r\n            }\r\n            //Agregar clase de seleccionado\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //Llenar campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n})();","(function (){\r\n    const ponentesInput = document.querySelector(\"#ponentes\");\r\n    \r\n    if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener(\"input\", buscarPonentes);\r\n\r\n        if(ponenteHidden.value){\r\n            (async ()=>{\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const {nombre, apellido} = ponente;\r\n                const ponenteDOM = document.createElement(\"LI\");\r\n                ponenteDOM.classList.add(\"listado-ponentes__ponente\", \"listado-ponentes__ponente--seleccionado\");\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })();\r\n        }\r\n\r\n        async function obtenerPonentes(){\r\n            const url = \"/api/ponentes\";\r\n\r\n            respuesta = await fetch(url);\r\n            resultado = await respuesta.json();\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        async function obtenerPonente(id){\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = respuesta.json();\r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []){\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre : `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: `${ponente.id}`\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n            if(busqueda.length > 3){\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter( ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente; \r\n                    }\r\n                })\r\n                mostrarPonentes();\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n        }\r\n\r\n        function mostrarPonentes(){\r\n\r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0){\r\n                ponentesFiltrados.forEach( ponente => {\r\n                    const ponenteHtml = document.createElement(\"LI\");\r\n                    ponenteHtml.classList.add(\"listado-ponentes__ponente\");\r\n                    ponenteHtml.textContent = ponente.nombre;\r\n                    ponenteHtml.dataset.ponenteId = ponente.id;\r\n                    ponenteHtml.onclick = seleccionarPonente;\r\n\r\n                    //Agregar al dom\r\n                    listadoPonentes.appendChild(ponenteHtml);\r\n                });\r\n            } else {\r\n                const noResultados = document.createElement(\"P\");\r\n                noResultados.classList.add(\"listado-ponentes__no-resultado\");\r\n                noResultados.textContent = \"No hay resultados para tu búsqueda\";\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n\r\n        }\r\n\r\n        function seleccionarPonente(e){\r\n            const ponente = e.target;\r\n\r\n            //Remover la clase previa\r\n            const ponenteprevio = document.querySelector(\".listado-ponentes__ponente--seleccionado\");\r\n            if(ponenteprevio){\r\n                ponenteprevio.classList.remove(\"listado-ponentes__ponente--seleccionado\");\r\n            }\r\n            ponente.classList.add(\"listado-ponentes__ponente--seleccionado\");\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n    if(tagsInput){\r\n        const tagsDiv = document.querySelector(\"#tags\");\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== \"\"){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n        //Escuchar cambios en el input\r\n        tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n        function guardarTag(e){\r\n            if(e.keyCode === 44){\r\n\r\n                if(e.target.value.trim() === \"\" || e.target.value < 1 ){\r\n                    return;\r\n                }\r\n                e.preventDefault(); //Hace que no agregue la coma al prevenir la accion por default\r\n                tags= [...tags, e.target.value.trim()];\r\n\r\n                tagsInput.value = \"\";\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = \"\";\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement(\"LI\");\r\n                etiqueta.classList.add(\"formulario__tag\");\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminartag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminartag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()\r\n"]}